programa Covidl9;
var
    int : i, j, p, k, maxVariables , maxRenglones;
    int : valor, Arreglo[10], OtroArreglo[10], unArregloAntesDel3[23][51], unTercerArreglo[10][10];
    dataframe : DatosCovid;
    string : VarCovid[100];

funcion int fact (int : j);
var int: i;
    { i= j + (p - j*2+j) ;
    si ( j == 1) entonces
        { regresa ( j ); }
    sino
        { regresa ( j * fact(j-1));}
}

funcion void inicia (int : y);
var int : x;
{ x= 0;
    mientras ( x < 11) haz
    {Arreglo[x] = y * x;
    x = x+1;}
}

principal ( )
{ lee (p) ; j =p * 2;   %%solo se ejemplifican algunas de las posibles funciones especiales
    inicia ( p * j - 5) ;
    %%unArregloAntesDel3[2][5] = unTercerArreglo[1][1];
    desde i=0 hasta 9 hacer
        { Arreglo [ i ] = Arreglo [ i ] * fact (Arreglo [i]- p) ;}
    cargaArchivo (DatosCovid , "C://Documentos/Covid.txt", maxVariables, maxRenglones );

    Variables (DatosCovid, VarCovid, maxVariables);  %% genera el arreglo de Variables de acuerdo al número máximo contabilizado al cargar archivo
    Grafica (DatosCovid, VarCovid[2] );
    Compara (DatosCovid, VarCovid[1] , VarCovid[5]);
    desde k=0 hasta maxVariables hacer
        { valor = Media (DatosCovid, VarCovid[k] ) ;
    escribe ("Media para la Variable" , VarCovid[k] , valor ) ;}   %%calcula y despulega las medias poro coda una de fas variables
    escribe ("Indice de correlacion entre Variable 1 y Variable 5 de la muestra" , Correlacionar (DatosCovid, VarCovid[1] , VarCovid[5]) ) ;

    mientras ( i >= 0) haz
        { escribe ("resultado" , Arreglo [i] , fact ( i +2)*valor ) ;
        i = i - 1;
    }

}
